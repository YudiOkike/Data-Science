"0","# Function to generate the URL for a specific page number on CarSite"
"0","get_carsite_url <- function(page_num) {"
"0","  paste0(""https://www.carsite.co.uk/used-car/page/"", page_num)  # Concatenate base URL with page number"
"0","}"
"0",""
"0","# Safely extract text from an HTML node, returning NA if the selector fails"
"0","safe_extract <- function(node, selector) {"
"0","  result <- node %>% html_element(selector) %>% html_text(trim = TRUE)  # Extract text and trim whitespace"
"0","  if (length(result) == 0) return(NA) else return(result)  # Return NA if no result, otherwise the text"
"0","}"
"0",""
"0","# Function to scrape car data from a single CarSite page"
"0","scrape_carsite_page <- function(page_num) {"
"0","  url <- get_carsite_url(page_num)  # Generate URL for the page"
"0","  cat(""Scraping Page:"", page_num, ""\n"")  # Print progress message"
"0","  page <- tryCatch(read_html(url), error = function(e) NULL)  # Attempt to read the page, return NULL on error"
"0","  if (is.null(page)) return(NULL)  # Exit if page loading failed"
"0","  "
"0","  cars <- page %>% html_elements("".paContainer"")  # Select all car listing containers"
"0","  "
"0","  # Map over each car listing to extract data into a data frame"
"0","  car_data <- map_df(cars, function(car) {"
"0","    data.frame("
"0","      Car_Name = safe_extract(car, ""h3.avlink a""),              # Car name from the link title"
"0","      Price = safe_extract(car, ""h4.advertprice""),             # Price from the advert"
"0","      Mileage = safe_extract(car, ""div.section28.fl:nth-child(2)""),  # Mileage from second div"
"0","      Transmission = safe_extract(car, ""div.section28.fl.mr1p:nth-child(1)""),  # Transmission type"
"0","      Fuel_Type = safe_extract(car, ""div.section28.fl:nth-child(4)""),  # Fuel type"
"0","      Engine_Size = safe_extract(car, ""div.section28.fl.mr1p:nth-child(5)""),  # Engine size"
"0","      Doors = safe_extract(car, ""div.section28.fl:nth-child(6)""),  # Number of doors"
"0","      Color = safe_extract(car, ""div.section28.fl.mr1p:nth-child(3)""),  # Car color"
"0","      Year_Model = safe_extract(car, "".section.f-12.pos-rel span.tal""),  # Year and model info"
"0","      stringsAsFactors = FALSE  # Prevent automatic factor conversion"
"0","    )"
"0","  })"
"0","  Sys.sleep(runif(1, 2, 5))  # Random delay between 2-5 seconds to avoid overloading the server"
"0","  return(car_data)  # Return the scraped data"
"0","}"
"0",""
"0","# Scrape data from pages 1 to 300 and combine into a single data frame"
"0","carsite_raw <- map_df(1:10, scrape_carsite_page)"
"1","Scraping Page:"
"1"," "
"1","1"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","2"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","3"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","4"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","5"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","6"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","7"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","8"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","9"
"1"," "
"1","
"
"1","Scraping Page:"
"1"," "
"1","10"
"1"," "
"1","
"
"0","View(carsite_raw)  # Display the raw scraped data"
