"0","n <- nrow(opt_df)"
"0",""
"0","# Objective: Maximise quantity delivered × (1 - risk)"
"0","f.obj <- opt_df$Quantity * opt_df$Risk_Adjusted_Efficiency"
"0",""
"0","# Constraints:"
"0","# 1. Total cost ≤ budget"
"0","budget_limit <- 50000  # arbitrary demo value — can adjust based on analysis"
"0","f.con1 <- opt_df$Cost"
"0","f.dir1 <- ""<="""
"0","f.rhs1 <- budget_limit"
"0",""
"0","# 2. Supply limit per supplier (max 3 SKUs per supplier)"
"0","supplier_matrix <- sapply(unique(opt_df$Supplier_ID), function(id) as.numeric(opt_df$Supplier_ID == id)) %>% t()"
"0","supplier_cap <- rep(3, nrow(supplier_matrix))"
"0",""
"0","# 3. One assignment per SKU (limit duplication if needed)"
"0","sku_matrix <- sapply(unique(opt_df$SKU_ID), function(id) as.numeric(opt_df$SKU_ID == id)) %>% t()"
"0","sku_cap <- rep(1, nrow(sku_matrix))"
"0",""
"0","# Combine all constraints"
"0","f.con <- rbind(f.con1, supplier_matrix, sku_matrix)"
"0","f.dir <- c(f.dir1, rep(""<="", length(supplier_cap)), rep(""<="", length(sku_cap)))"
"0","f.rhs <- c(f.rhs1, supplier_cap, sku_cap)"
"0",""
"0","# Binary decision vector (select or skip)"
"0","f.bin <- rep(1, n)"
"0",""
"0","# Solve LP"
"0","solution <- lp(""max"", f.obj, f.con, f.dir, f.rhs, binary.vec = 1:n)"
"0",""
"0","if (solution$status == 0) {"
"0","  selected <- opt_df[which(solution$solution == 1), ]"
"0","  df_lp <- selected"
"0","  cat(""Optimisation successful.\n"")"
"0","} else {"
"0","  stop(""Optimisation failed. Status code: "", solution$status)"
"0","}"
"1","Optimisation successful.
"
