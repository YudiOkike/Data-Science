"0","# Clean and preprocess dataset: convert to Date, ensure numeric columns, and select relevant variables"
"0","fuel_clean <- fuel_raw %>%"
"0","  mutate("
"0","    Date = as.Date(Week_Ending),"
"0","    avg_price = as.numeric(Avg_Fuel_Price),"
"0","    Quantity_Per_Transaction = as.numeric(gsub("","", """", Quantity_Per_Transaction))"
"0","  ) %>%"
"0","  select(Date, avg_price, Quantity_Per_Transaction) %>%"
"0","  arrange(Date)"
"0",""
"0","# Interpolate missing values in avg_price and Quantity_Per_Transaction"
"0","fuel_clean$avg_price <- zoo::na.approx(fuel_clean$avg_price)"
"0","fuel_clean$Quantity_Per_Transaction <- zoo::na.approx(fuel_clean$Quantity_Per_Transaction)"
"0",""
"0","# Define function to handle outliers using IQR method and interpolation"
"0","handle_outliers <- function(series) {"
"0","  Q1 <- quantile(series, 0.25, na.rm = TRUE)"
"0","  Q3 <- quantile(series, 0.75, na.rm = TRUE)"
"0","  IQR_val <- Q3 - Q1"
"0","  lower <- Q1 - 1.5 * IQR_val"
"0","  upper <- Q3 + 1.5 * IQR_val"
"0","  series[series < lower | series > upper] <- NA"
"0","  zoo::na.approx(series)"
"0","}"
"0",""
"0","# Apply outlier handling to avg_price and Quantity_Per_Transaction"
"0","fuel_clean$avg_price <- handle_outliers(fuel_clean$avg_price)"
"0","fuel_clean$Quantity_Per_Transaction <- handle_outliers(fuel_clean$Quantity_Per_Transaction)"
