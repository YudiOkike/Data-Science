"0","# Define sequential LSTM model with one LSTM layer and one dense layer"
"0","model_lstm <- keras_model_sequential() %>%"
"0","  layer_lstm(units = 50, input_shape = c(dim(train_x)[2], 1)) %>%"
"0","  layer_dense(units = 1)"
"0",""
"0","# Compile model with mean squared error loss and Adam optimizer"
"0","model_lstm %>% compile(loss = ""mse"", optimizer = ""adam"")"
"0","# Train model with validation split"
"0","history <- model_lstm %>% fit("
"0","  x = train_x, y = train_y, epochs = 50, batch_size = 8,"
"0","  validation_split = 0.1, verbose = 0"
"0",")"
