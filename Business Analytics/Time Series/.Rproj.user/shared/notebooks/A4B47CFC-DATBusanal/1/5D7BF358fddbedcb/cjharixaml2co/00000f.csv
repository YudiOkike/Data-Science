"0","# Select relevant columns for LSTM model"
"0","fuel_lstm <- fuel_data %>% select(Date, avg_price)"
"0","# Normalise avg_price to [0,1] for better LSTM training"
"0","min_price <- min(fuel_lstm$avg_price)"
"0","max_price <- max(fuel_lstm$avg_price)"
"0","fuel_lstm$norm_price <- (fuel_lstm$avg_price - min_price) / (max_price - min_price)"
"0",""
"0","# Function to create supervised learning dataset with lagged features"
"0","create_supervised <- function(series, lag = 3) {"
"0","  x <- NULL; y <- NULL"
"0","  for (i in 1:(length(series) - lag)) {"
"0","    x <- rbind(x, series[i:(i + lag - 1)])"
"0","    y <- c(y, series[i + lag])"
"0","  }"
"0","  list(x = x, y = y)"
"0","}"
"0",""
"0","# Create supervised dataset with 3 lags"
"0","supervised <- create_supervised(fuel_lstm$norm_price)"
"0","# Perform 80/20 train-test split"
"0","split_index <- floor(0.8 * nrow(supervised$x))"
"0","train_x <- supervised$x[1:split_index, ]"
"0","train_y <- supervised$y[1:split_index]"
"0","test_x <- supervised$x[(split_index + 1):nrow(supervised$x), ]"
"0","test_y <- supervised$y[(split_index + 1):length(supervised$y)]"
"0",""
"0","# Reshape data for LSTM input (samples, timesteps, features)"
"0","train_x <- array(train_x, dim = c(nrow(train_x), ncol(train_x), 1))"
"0","test_x <- array(test_x, dim = c(nrow(test_x), ncol(test_x), 1))"
