"0","# Reconstruct aligned forecast time series for each model"
"0","ts_sarima <- ts(manual_fc$mean, start = start(test_ts), frequency = frequency(test_ts)) # Manual Arima"
"0","ts_internal <- ts(fc_manual$mean, start = start(test_y), frequency = frequency(test_y)) # Manual Arima"
"0","ts_brent <- ts(forecast_auto$mean, start = start(test_y), frequency = frequency(test_y)) # Auto Arima"
"0",""
"0","# Reconstruct aligned actual time series"
"0","ts_actual_sarima <- test_ts"
"0","ts_actual_internal <- test_y"
"0","ts_actual_brent <- test_y  # Same as internal"
"0",""
"0","# Compute accuracy metrics for each model"
"0","sarima_metrics <- data.frame("
"0","  RMSE = round(rmse(ts_actual_sarima, ts_sarima), 2),"
"0","  MAE = round(mae(ts_actual_sarima, ts_sarima), 2),"
"0","  MAPE = round(mape(ts_actual_sarima, ts_sarima) * 100, 2)"
"0",")"
"0",""
"0","internal_metrics <- data.frame("
"0","  RMSE = round(rmse(ts_actual_internal, ts_internal), 2),"
"0","  MAE = round(mae(ts_actual_internal, ts_internal), 2),"
"0","  MAPE = round(mape(ts_actual_internal, ts_internal) * 100, 2)"
"0",")"
"0",""
"0","brent_metrics <- data.frame("
"0","  RMSE = round(rmse(ts_actual_brent, ts_brent), 2),"
"0","  MAE = round(mae(ts_actual_brent, ts_brent), 2),"
"0","  MAPE = round(mape(ts_actual_brent, ts_brent) * 100, 2)"
"0",")"
"0",""
"0","# Combine into a single table"
"0","model_perf <- rbind("
"0","  ""Univariate SARIMA"" = sarima_metrics,"
"0","  ""SARIMAX (Internal)"" = internal_metrics,"
"0","  ""SARIMAX (Brent)"" = brent_metrics"
"0",")"
"0",""
"0","# Display the performance comparison table"
"0","print(model_perf)"
